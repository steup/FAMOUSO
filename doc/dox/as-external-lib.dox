/*******************************************************************************
 *
 * Copyright (c) 2008-2010 Michael Schulze <mschulze@ivs.cs.uni-magdeburg.de>
 * All rights reserved.
 *
 *    Redistribution and use in source and binary forms, with or without
 *    modification, are permitted provided that the following conditions
 *    are met:
 *
 *    * Redistributions of source code must retain the above copyright
 *      notice, this list of conditions and the following disclaimer.
 *
 *    * Redistributions in binary form must reproduce the above copyright
 *      notice, this list of conditions and the following disclaimer in
 *      the documentation and/or other materials provided with the
 *      distribution.
 *
 *    * Neither the name of the copyright holders nor the names of
 *      contributors may be used to endorse or promote products derived
 *      from this software without specific prior written permission.
 *
 *
 *    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 *    IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 *    TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 *    PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 *    OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 *    SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 *    LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 *    DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 *    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 *    (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 *    OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 *
 * $Id$
 *
 ******************************************************************************/

/*!	\page  as-external-lib How to use %FAMOUSO as external library in own projects?

For using %FAMOUSO within other projects as an external library you have to
provide all relevant definitions to build the whole project without missing one
dependency. FAMOUSO's make-system provides all needed means to do this task,
but you have to fulfil some prerequisites.

Under the assumption that %FAMOUSO was successfully built for the envisioned
platform(s) and the project uses also a make-system, the following steps show
how to integrate %FAMOUSO and build successfully against it.

-# Open your top-level Makefile and provide the location where is %FAMOUSO
\code
FAMOUSO_INSTALLDIR = famouso root dir
\endcode
-# You could set the \b FAMOUSO_CONFIG variable to choose the platform on
   which %FAMOUSO is used in \b FAMOUSO_CONFIG e.g.:
   \code
FAMOUSO_CONFIG = linux
   \endcode
   At the moment, %FAMOUSO's supported platforms are:
   \par
        - linux
        - linux/openwrt
        - linux/xenomai
        - windows/mingw-cross
        - windows/mingw-native
        - windows/cygwin
        - avr

   If you don't define the variable the current value from
   \b FAMOUSO_INSTALLDIR/make/config.mk is chosen.
-# You can also set the generation of DEBUG messages by setting the
   FAMOUSO_DEBUG variable. If you set it e.g. to "FAMOUSO_DEBUG=" no debugging
   information are generated by the compiler, but the normal debugging output
   of %FAMOUSO is generated.  Switching this off too, you should use:
   \code
FAMOUSO_DEBUG=-DFAMOUSO_DEBUG_DISABLE
   \endcode
-# The last step is including a special %FAMOUSO makefile that puts all relevant
   variables that are needed in order to build correctly against %FAMOUSO
   \code
include $(FAMOUSO_INSTALLDIR)/make/famouso_as_external_lib.mk
   \endcode
   After the include the following variables are defined:
   \code
$(FAMOUSO_COMPILER_OPTIONS_MUST_HAVE)
$(FAMOUSO_COMPILER_OPTIONS_SUGGESTED)
   \endcode
   They contain the right settings for includes, libs, preprocessor and so on.
   The names are self-explanatory and the variables should be used within own
   defined compiling-rules.

This is all you need to do for integrating %FAMOUSO into your project. A
minimal example on what is absolut needed looks like thus:
    \code
###################################################
# FAMOUSO related stuff                           #
###################################################
FAMOUSO_INSTALLDIR = famouso root dir
include $(FAMOUSO_INSTALLDIR)/make/famouso_as_external_lib.mk

###################################################
# Your Makefile instructions and rules start here #
###################################################
all:
	@echo $(FAMOUSO_COMPILER_OPTIONS_MUST_HAVE)
	@echo $(FAMOUSO_COMPILER_OPTIONS_SUGGESTED)

    \endcode

A complete example Makefile could be found under
\code
famouso-dir/doc/dox/Example_Makefile_for_FAMOUSO_as_external_lib.mk
\endcode
*/
